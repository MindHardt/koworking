// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/api' | 'http://localhost:3000/api' | (string & {});
};

/**
 * AddVisitRequest
 */
export type AddVisitRequest = {
    location: string;
    utm_source: string;
    utm_medium: string;
    utm_campaign: string;
    utm_term?: string | null;
    utm_content?: string | null;
    userAgent?: string | null;
};

/**
 * CreateVacancyRequest
 */
export type CreateVacancyRequest = {
    title: string;
    location: string;
    description: string;
    conditions: string;
    expectations: string;
    imageUrl: string | null;
    paycheck: Paycheck;
};

/**
 * IFormFile
 */
export type IFormFile = Blob | File;

/**
 * KoworkerModel
 */
export type KoworkerModel = {
    id: string;
    avatarUrl: string | null;
};

/**
 * MigrateUploadRequest
 */
export type MigrateUploadRequest = {
    url: string;
    scope: UploadScope;
};

/**
 * PaginatedResponseOfUploadModel
 */
export type PaginatedResponseOfUploadModel = {
    total: number;
    offset: number;
    limit: number;
    data: Array<UploadModel>;
};

/**
 * PaginatedResponseOfVacancyModel
 */
export type PaginatedResponseOfVacancyModel = {
    total: number;
    offset: number;
    limit: number;
    data: Array<VacancyModel>;
};

/**
 * Paycheck
 */
export type Paycheck = {
    amount: number;
    period: PaycheckPeriod;
    type: PaycheckType;
} | null;

/**
 * PaycheckPeriod
 */
export type PaycheckPeriod = 'Hourly' | 'Daily' | 'Weekly' | 'Monthly' | 'Yearly';

/**
 * PaycheckType
 */
export type PaycheckType = 'Net' | 'Gross';

/**
 * UploadModel
 */
export type UploadModel = {
    id: string;
    uploaderId: string;
    hash: string;
    contentType: string;
    fileName: string;
    fileSize: number;
    uploadTime: string;
    scope: UploadScope;
};

/**
 * UploadScope
 */
export type UploadScope = 'Attachment' | 'Avatar' | 'Admin';

/**
 * VacancyModel
 */
export type VacancyModel = {
    id: string;
    createdAt: string;
    updatedAt: string;
    title: string;
    location: string;
    description: string;
    conditions: string;
    expectations: string;
    imageUrl: string | null;
    paycheck: Paycheck;
};

export type PostDevSeedData = {
    body?: never;
    path?: never;
    query?: {
        Vacancies?: number;
    };
    url: '/dev/seed';
};

export type PostDevSeedResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteUploadsByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/uploads/{Id}';
};

export type DeleteUploadsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type DeleteUploadsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetUploadsByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/uploads/{Id}';
};

export type GetUploadsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetUploadsData = {
    body?: never;
    path?: never;
    query?: {
        Scope?: 'Attachment' | 'Avatar' | 'Admin';
        Query?: string;
        /**
         * Offset (pagination)
         */
        Offset?: number;
        /**
         * Count (pagination)
         */
        Limit?: number;
    };
    url: '/uploads';
};

export type GetUploadsResponses = {
    /**
     * OK
     */
    200: PaginatedResponseOfUploadModel;
};

export type GetUploadsResponse = GetUploadsResponses[keyof GetUploadsResponses];

export type PostUploadsData = {
    body: {
        File: IFormFile;
    } & {
        Scope: UploadScope;
    };
    path?: never;
    query?: never;
    url: '/uploads';
};

export type PostUploadsErrors = {
    /**
     * Unprocessable Entity
     */
    422: unknown;
};

export type PostUploadsResponses = {
    /**
     * OK
     */
    200: UploadModel;
};

export type PostUploadsResponse = PostUploadsResponses[keyof PostUploadsResponses];

export type PostUploadsMigrateData = {
    body?: MigrateUploadRequest;
    path?: never;
    query?: never;
    url: '/uploads/migrate';
};

export type PostUploadsMigrateErrors = {
    /**
     * Unprocessable Entity
     */
    422: unknown;
};

export type PostUploadsMigrateResponses = {
    /**
     * OK
     */
    200: UploadModel;
};

export type PostUploadsMigrateResponse = PostUploadsMigrateResponses[keyof PostUploadsMigrateResponses];

export type GetKoworkersMeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/koworkers/me';
};

export type GetKoworkersMeResponses = {
    /**
     * OK
     */
    200: KoworkerModel;
};

export type GetKoworkersMeResponse = GetKoworkersMeResponses[keyof GetKoworkersMeResponses];

export type GetVacanciesData = {
    body?: never;
    path?: never;
    query?: {
        Search?: string;
        /**
         * Offset (pagination)
         */
        Offset?: number;
        /**
         * Count (pagination)
         */
        Limit?: number;
    };
    url: '/vacancies';
};

export type GetVacanciesResponses = {
    /**
     * OK
     */
    200: PaginatedResponseOfVacancyModel;
};

export type GetVacanciesResponse = GetVacanciesResponses[keyof GetVacanciesResponses];

export type PostVacanciesData = {
    body?: CreateVacancyRequest;
    path?: never;
    query?: never;
    url: '/vacancies';
};

export type PostVacanciesResponses = {
    /**
     * OK
     */
    200: VacancyModel;
};

export type PostVacanciesResponse = PostVacanciesResponses[keyof PostVacanciesResponses];

export type GetVacanciesByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/vacancies/{Id}';
};

export type GetVacanciesByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetVacanciesByIdResponses = {
    /**
     * OK
     */
    200: VacancyModel;
};

export type GetVacanciesByIdResponse = GetVacanciesByIdResponses[keyof GetVacanciesByIdResponses];

export type PostVisitsData = {
    body?: AddVisitRequest;
    path?: never;
    query?: never;
    url: '/visits';
};

export type PostVisitsResponses = {
    /**
     * OK
     */
    200: unknown;
};
